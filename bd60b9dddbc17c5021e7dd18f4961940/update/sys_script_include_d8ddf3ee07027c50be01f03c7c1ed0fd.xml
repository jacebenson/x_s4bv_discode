<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_s4bv_discode.ScannerTableBase</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Scanner Strategy Base Class for specific object</description>
        <name>ScannerTableBase</name>
        <script><![CDATA[var ScannerTableBase = Class.create();
ScannerTableBase.prototype = Object.extendsObject(Scanner, {
    _runScanFromSource: function (grSource) {
        if(!grSource || !grSource.isValidRecord()) return {};
            this._scanBusinessRulesRunningOnTable(grSource);
            this._scanUiActionsRunningOnTable(grSource);
            this._scanTableForExtension(grSource);
    },


    _scanTableForExtension: function (grSource) {
        var strClassName = grSource.getTableName(),
            sourceId = grSource.getUniqueValue();
        var idTableParent = grSource.getValue('super_class') || '';
        if (!idTableParent) return;
        var idTableParentCi = this._createUpdateCiFromSource(strClassName, idTableParent);

        if (!idTableParentCi) return;
        var childId = this._createUpdateCiFromSource(strClassName, sourceId) + '';
        this._setRelationshipExtend(idTableParentCi, childId);

        var grTable = grSource.super_class.getRefRecord();
        if(grTable) {
            this._scanTableForExtension(grTable); // recursive
        }
    },

    _scanBusinessRulesRunningOnTable: function (grSource) {
        var strClassName = grSource.getTableName(),
            sourceId = grSource.getUniqueValue();
        var strSearchString1 = grSource.getValue('name'); // table name

        var grTarget = new GlideRecord('sys_script');
        grTarget.addQuery('collection', strSearchString1);
        grTarget.query();
        while (grTarget.next()) {
            var childId = this._createUpdateCiFromSource('sys_script', grTarget.getUniqueValue()) + '';
            var parentId = this._createUpdateCiFromSource(strClassName, sourceId) + '';
            if (parentId && childId && (parentId != childId)) {
                this._setRelationshipExecute(parentId, childId);
            }
        }
    },
    _scanUiActionsRunningOnTable: function (grSource) {
        var strClassName = grSource.getTableName(),
            sourceId = grSource.getUniqueValue();
        var strSearchString1 = grSource.getValue('name');

        var grTarget = new GlideRecord('sys_ui_action');
        grTarget.addQuery('table', strSearchString1);
        grTarget.query();
        while (grTarget.next()) {
            var parentId = this._createUpdateCiFromSource(strClassName, sourceId) + '';
            var childId = this._createUpdateCiFromSource('sys_ui_action', grTarget.getUniqueValue()) + '';
            if (parentId && childId && (parentId != childId)) {
                this._setRelationshipExecute(parentId, childId);
            }
        }
    },

    type: 'ScannerTableBase'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>w.geek6</sys_created_by>
        <sys_created_on>2021-08-21 22:31:14</sys_created_on>
        <sys_id>d8ddf3ee07027c50be01f03c7c1ed0fd</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>ScannerTableBase</sys_name>
        <sys_package display_value="Discode" source="x_s4bv_discode">bd60b9dddbc17c5021e7dd18f4961940</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Discode">bd60b9dddbc17c5021e7dd18f4961940</sys_scope>
        <sys_update_name>sys_script_include_d8ddf3ee07027c50be01f03c7c1ed0fd</sys_update_name>
        <sys_updated_by>w.geek6</sys_updated_by>
        <sys_updated_on>2021-09-01 23:11:02</sys_updated_on>
    </sys_script_include>
</record_update>
